# Este es el primer archivo que se ejecuta

# Entramos a la seccion General, esto quiere decir que las configuraciones
# definidas aqui seran aplicadas a todo contexto de la red.
[General]

# Establecemos el nombre de la red definido en el .ned
network = Network

# Establecemos el tiempo durante el cual la simulacion sera ejecutada.
sim-time-limit = 200s


#De aqui en adelante se van a definir parametros los cuales se acceden con
#la funcion par(nameOfPar).
#Ej: en el contexto de "NodeTx.gen", par(packetByteSize) devolvera 12500.


# El sig. par define cada cuanto se va a generar un nuevo mensaje desde generator.
# Se elige un numero de la distr exponencial con media 0.001 secs.
Network.NodeTx.gen.generationInterval = exponential(0.001)

# Tama単o de los paquetes en bytes
Network.NodeTx.gen.packetByteSize = 12500

# Tama単o del buffer de la cola en el nodeRx (generator->queue->nodeRx.out)
Network.NodeRx.queue.bufferSize = 200

# Tama単o del buffer de la cola por defecto (nodRx.out->queue->nodeTx.in)
Network.queue.bufferSize = 200

# Tama単o del buffer de la cola en el nodeTx (nodeTx.in->queue->sink)
Network.NodeTx.queue.bufferSize = 2000000

# Tiempo del envio de paquetes nodeRx (generator->queue->nodeRx.out)
Network.NodeRx.queue.timeService = exponential(0.001)

# Tiempo del envio de paquetes por defecto (nodRx.out->queue->nodeTx.in)
Network.queue.timeService = exponential(0.001)

# Tiempo del envio de paquetes en el nodeTx (nodeTx.in->queue->sink)
Network.NodeTx.queue.timeService = exponential(0.001)


# Sig archivo a leer es el .ned